/*
firestore.rules - Updated Version với Notifications
Firestore Security Rules cho Social Media Web Database - cập nhật với notifications permissions
Thêm rules cho collection 'notifications' để hỗ trợ hệ thống thông báo realtime
*/

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - Chỉ owner có thể chỉnh sửa, tất cả có thể đọc
    match /users/{userId} {
      allow read: if true; // Cho phép đọc public để hiển thị profile, search users
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin collection - Authenticated users có thể đọc để check admin status
    match /admin/{adminId} {
      allow read: if request.auth != null; // Authenticated users có thể check admin status
      allow write: if false; // Không cho phép write để bảo mật - chỉ admin database có thể thay đổi
    }
    
    // Posts collection - Cho phép authenticated users read/write để support like operations + sync
    match /posts/{postId} {
      allow read: if true; // Public read cho discover, home feed
      allow create: if request.auth != null; // Authenticated users có thể tạo post
      allow update: if request.auth != null && 
                   (request.auth.uid == resource.data.UserID || // Owner của post
                    (resource.data.UserID != null && request.auth.uid != null)); // Data sync operations
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.UserID; // Chỉ owner mới xóa được
    }
    
    // Comments collection - Loosened permissions cho comments + sync
    match /comments/{commentId} {
      allow read: if true; // Public read để hiển thị comments
      allow create: if request.auth != null; // Authenticated users có thể tạo comment
      allow update: if request.auth != null && 
                   (request.auth.uid == resource.data.UserID || // Owner của comment
                    (resource.data.UserID != null && request.auth.uid != null)); // Data sync operations
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.UserID; // Chỉ owner xóa comment của mình
    }
    
    // Likes collection - Completely loosened permissions cho likes + sync
    match /likes/{likeId} {
      allow read: if true; // Public read để count likes
      allow create: if request.auth != null; // Authenticated users có thể like
      allow update: if request.auth != null && 
                   (request.auth.uid == resource.data.UserID || // Owner của like
                    (resource.data.UserID != null && request.auth.uid != null)); // Data sync operations
      allow delete: if request.auth != null; // Authenticated users có thể unlike
    }
    
    // Friends collection - Authenticated users có thể CRUD relationships của mình
    match /friends/{friendshipId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && (request.auth.uid == request.resource.data.senderID 
        || request.auth.uid == request.resource.data.receiverID);
      allow update: if request.auth != null 
        && (request.auth.uid == resource.data.senderID 
        || request.auth.uid == resource.data.receiverID);
      allow delete: if request.auth != null 
        && (request.auth.uid == resource.data.senderID 
        || request.auth.uid == resource.data.receiverID);
    }
    
    // Notifications collection - Recipient có thể đọc và update, sender có thể tạo
    match /notifications/{notificationId} {
      // Recipient có thể đọc notifications của mình
      allow read: if request.auth != null 
        && request.auth.uid == resource.data.recipientID;
      
      // Recipient có thể update notifications của mình (mark as read)
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.recipientID;
      
      // Authenticated users có thể tạo notifications cho users khác
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.senderID;
      
      // Không cho phép xóa notifications để giữ lịch sử
      allow delete: if false;
    }
    
    // User Locations collection cho nearby friends feature
    match /userLocations/{userId} {
      allow read: if request.auth != null; // Authenticated users có thể đọc locations để tìm nearby friends
      allow write: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể write location của mình
      allow delete: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể xóa location của mình
    }
    
    // Locations collection cho nearby users feature - Thêm collection mới
    match /locations/{userId} {
      allow read: if request.auth != null; // Authenticated users có thể đọc locations để tìm nearby users
      allow write: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể write location của mình
      allow delete: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể xóa location của mình
    }
    
    // News collection - READ ONLY cho authenticated users, chỉ Firebase Functions có quyền ghi
    match /news/{newsId} {
      allow read: if request.auth != null; // Authenticated users có thể đọc tin tức
      allow write: if false; // Không cho phép user ghi tin tức - chỉ Firebase Functions có quyền
    }
    
    // Deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}